AWSTemplateFormatVersion: "2010-09-09"
Resources:
  # GuildPactBrokerVpc:
  #   Type: AWS::EC2::VPC
  #   Properties:
  #     CidrBlock: '10.0.0.0/16'
  #     EnableDnsSupport: true
  #     EnableDnsHostnames: true
  #     Tags:
  #       - Key: Name
  #         Value: GuildPactBrokerVpc
  #       - Key: squad
  #         Value: qpass
  GuildPactBrokerDBCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name:         /qpass/guild-pact-broker/database/credentials
      Description:  Guild Pact Broker DB Credentials
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey:    "password"
        PasswordLength:       16
        ExcludePunctuation:   true
  GuildPactBrokerRDS:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: postgres
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      EngineVersion: 11.5
      MasterUsername: admin
      MasterUserPassword: !Join
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref GuildPactBrokerDBCredentials
          - ':SecretString:password}}'
      DBInstanceIdentifier: guild-pact-broker
      DBName: guild_pact_broker
      PubliclyAccessible: true
      Tags:
        - Key: Name
          Value: GuildPactBrokerRDS
        - Key: squad
          Value: qpass
    DepndsOn: 
      - GuildPactBrokerDBCredentials
      - GuildPactBrokerTaskDefinition
  GuildPactBrokerTaskIAMExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GuildPactBrokerExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt GuildPactBrokerLogGroup.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/guild-pact-broker:*
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Ref GuildPactBrokerDBCredentials
        # - PolicyName: GuildPactBrokerTaskExecutionPolicy
        #   PolicyDocument:
        #     Version: '2012-10-17'
        #     Statement:
        #       - Effect: Allow

  GuildPactBrokerCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: GuildPactBrokerCluster
      Tags:
        - Key: Name
          Value: GuildPactBrokerCluster
        - Key: squad
          Value: qpass
  GuildPactBrokerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: GuildPactBrokerTaskDefinition
      Cpu: '256'
      Memory: '512'
      # NetworkMode: awsvpc
      Tags:
        - Key: Name
          Value: GuildPactBrokerTaskDefinition
        - Key: squad
          Value: qpass
      ContainerDefinitions:
        - Name: GuildPactBrokerContainer
          Image: dius/pact-broker
          Environment:
            - Name: PACT_BROKER_DATABASE_USERNAME
              Value: !Sub '{{resolve:secretsmanager:${GuildPactBrokerDBCredentials}:SecretString:username}}'
            - Name: PACT_BROKER_DATABASE_PASSWORD
              Value: !Sub '{{resolve:secretsmanager:${GuildPactBrokerDBCredentials}:SecretString:password}}'
            - Name: PACT_BROKER_DATABASE_HOST
              Value: !GetAtt GuildPactBrokerRDS.Endpoint.Address
            - Name: PACT_BROKER_DATABASE_NAME
              Value: postgres
            - Name: PACT_BROKER_LOG_LEVEL
              Value: INFO
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      LogConfiguration:
        LogDriver: awslogs
        Options:
          awslogs-group: !Ref GuildPactBrokerLogGroup
          awslogs-region: !Ref 'AWS::Region'
          awslogs-stream-prefix: ecs
      ExecutionRoleArn: !GetAtt GuildPactBrokerTaskIAMExecutionRole.Arn
  GuildPactBrokerEC2Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref GuildPactBrokerCluster
      LaunchType: EC2
      DeploymentController:
        Type: ECS
      # NetworkConfiguration:
      #   AwsvpcConfiguration:
      #     Subnets:
      #       - !Ref MySubnet1
      #       - !Ref MySubnet2
      #     AssignPublicIp: DISABLED
      TaskDefinition: !Ref GuildPactBrokerTaskDefinition
  GuildPactBrokerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/guild-pact-broker
      RetentionInDays: 7
  # MySubnet1:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref GuildPactBrokerVpc
  #     CidrBlock: '10.0.0.0/24'
  #     AvailabilityZone: us-east-1a
  # MySubnet2:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref GuildPactBrokerVpc
  #     CidrBlock: '10.0.1.0/24'
  #     AvailabilityZone: us-east-1b
